this.Shopify=this.Shopify||{},this.Shopify.theme=this.Shopify.theme||{},this.Shopify.theme.product=function(r){"use strict";function n(r,t){return e(r),function(r){if(Array.isArray(r)&&"object"==typeof r[0])throw new Error(r+"is not a valid array of options.")}(t),r.variants.filter(function(n){return t.every(function(r,t){return n.options[t]===r})})[0]||null}function e(r){if("object"!=typeof r)throw new TypeError(r+" is not an object.");if(0===Object.keys(r).length&&r.constructor===Object)throw new Error(r+" is empty.")}return r.getProductJson=function(r){return fetch("/products/"+r+".js").then(function(r){return r.json()})},r.getVariantFromId=function(r,t){if(e(r),"number"!=typeof t)throw new TypeError(t+" is not a Number.");return r.variants.filter(function(r){return r.id===t})[0]||null},r.getVariantFromSerializedArray=function(r,t){return e(r),n(r,function(n,r){e(n),function(r){if(!Array.isArray(r))throw new TypeError(r+" is not an array.");if(0!==r.length){if(!r[0].hasOwnProperty("name"))throw new Error(r[0]+"does not contain name key.");if("string"!=typeof r[0].name)throw new TypeError("Invalid value type passed for name of option "+r[0].name+". Value should be string.")}}(r);var o=[];return r.forEach(function(r){for(var t=0;t<n.options.length;t++)if(n.options[t].name.toLowerCase()===r.name.toLowerCase()){o[t]=r.value;break}}),o}(r,t))},r.getVariantFromOptionArray=n,r}({});
